//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "profiles")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub nom: String,
    pub prenom: String,
    pub photo: Option<String>,
    pub star: bool,
    pub consentement_nom: bool,
    pub consentement_gsm: bool,
    pub consentement_email: bool,
    pub consentement_ecole: bool,
    pub consentement_diplome: bool,
    pub consentement_certificat: bool,
    pub consentement_entreprise: bool,
    pub consentement_adresse: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::profile_adresses::Entity")]
    ProfileAdresses,
    #[sea_orm(has_many = "super::user_certificats::Entity")]
    UserCertificats,
    #[sea_orm(has_many = "super::user_competences::Entity")]
    UserCompetences,
    #[sea_orm(has_many = "super::user_contacts::Entity")]
    UserContacts,
    #[sea_orm(has_many = "super::user_departements::Entity")]
    UserDepartements,
    #[sea_orm(has_many = "super::user_diplomes::Entity")]
    UserDiplomes,
    #[sea_orm(has_many = "super::user_educations::Entity")]
    UserEducations,
    #[sea_orm(has_many = "super::user_eglises::Entity")]
    UserEglises,
    #[sea_orm(has_many = "super::user_langues::Entity")]
    UserLangues,
    #[sea_orm(has_many = "super::user_plus_infos::Entity")]
    UserPlusInfos,
    #[sea_orm(has_many = "super::user_professions::Entity")]
    UserProfessions,
}

impl Related<super::profile_adresses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProfileAdresses.def()
    }
}

impl Related<super::user_certificats::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserCertificats.def()
    }
}

impl Related<super::user_competences::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserCompetences.def()
    }
}

impl Related<super::user_contacts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserContacts.def()
    }
}

impl Related<super::user_departements::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserDepartements.def()
    }
}

impl Related<super::user_diplomes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserDiplomes.def()
    }
}

impl Related<super::user_educations::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserEducations.def()
    }
}

impl Related<super::user_eglises::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserEglises.def()
    }
}

impl Related<super::user_langues::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserLangues.def()
    }
}

impl Related<super::user_plus_infos::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserPlusInfos.def()
    }
}

impl Related<super::user_professions::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserProfessions.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
